import React, { useState } from "react";
import { useCart } from "../CartContext/CartContext"; // –ü—É—Ç—å –∫ CartContext –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
import "./WaffleIceCreamCatalog.css"; // –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª —Å—Ç–∏–ª–µ–π

const WaffleIceCreamCatalog = () => {
  const [selectedProduct, setSelectedProduct] = useState(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
  const [currentDot, setCurrentDot] = useState(0); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ç–æ—á–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  
  const { addToCart, setIsCartOpen } = useCart(); // –ü–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∫–æ—Ä–∑–∏–Ω—ã

  // –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö (–≤–∞—Ñ–µ–ª—å–Ω–æ–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ –ß–û–ö–û-–¢–ê–ö–û)
  const waffleProducts = [
    { 
      id: 1, 
      name: "–ê–°–°–û–†–¢–ò –í–ö–£–°–û–í - –ß–û–ö–û –¢–ê–ö–û [4 –®–¢–£–ö–ò]", 
      price: 500, 
      rating: 5.0, 
      reviews: 1, 
      description: "–ê—Å—Å–æ—Ä—Ç–∏ –≤—Å–µ—Ö –≤–∫—É—Å–æ–≤ –ß–æ–∫–æ –¢–∞–∫–æ.", 
      images: ["waffle1.png", "waffle12.png"],
      isNew: true 
    },
    { 
      id: 2, 
      name: "–†–ò–ß –®–û–ö–û–õ–ê–î - –ß–û–ö–û –¢–ê–ö–û [4 –®–¢–£–ö–ò]", 
      price: 500, 
      rating: 5.0, 
      reviews: 0, 
      description: "–®–æ–∫–æ–ª–∞–¥–Ω–æ–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ —Å –≤–∞—Ñ–ª—è–º–∏ —Ç–∞–∫–æ.", 
      images: ["waffle2.png", "waffle22.png"],
      isNew: true 
    },
    { 
      id: 3, 
      name: "–ö–†–£–ù–ß–ò –ö–ê–†–ê–ú–ï–õ–¨ - –ß–û–ö–û –¢–ê–ö–û [4 –®–¢–£–ö–ò]", 
      price: 500, 
      rating: 5.0, 
      reviews: 0, 
      description: "–ú–æ—Ä–æ–∂–µ–Ω–æ–µ —Å –≤–∞—Ñ–ª—è–º–∏ —Ç–∞–∫–æ —Å–æ –≤–∫—É—Å–æ–º –∫–∞—Ä–∞–º–µ–ª–∏.", 
      images: ["waffle3.png", "waffle32.png"],
      isNew: true 
    },
    { 
      id: 4, 
      name: "–ö–û–õ–î –ö–û–§–ï - –ß–û–ö–û –¢–ê–ö–û [4 –®–¢–£–ö–ò]", 
      price: 500, 
      rating: 5.0, 
      reviews: 1, 
      description: "–ú–æ—Ä–æ–∂–µ–Ω–æ–µ —Å –≤–∞—Ñ–ª—è–º–∏ —Ç–∞–∫–æ —Å–æ –≤–∫—É—Å–æ–º –∫–æ—Ñ–µ.", 
      images: ["waffle4.png", "waffle42.png"],
      isNew: true 
    },
    { 
      id: 5, 
      name: "–ö–û–õ–î –ö–û–§–ï - –ß–û–ö–û –¢–ê–ö–û [4 –®–¢–£–ö–ò]", 
      price: 500, 
      rating: 5.0, 
      reviews: 1, 
      description: "–ú–æ—Ä–æ–∂–µ–Ω–æ–µ —Å –≤–∞—Ñ–ª—è–º–∏ —Ç–∞–∫–æ —Å–æ –≤–∫—É—Å–æ–º –∫–æ—Ñ–µ.", 
      images: ["waffle5.png", "waffle52.png"],
      isNew: true 
    },
  ];

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const handleProductClick = (product) => {
    setSelectedProduct(product);
  };

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const closeModal = () => {
    setSelectedProduct(null);
  };

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
  const handleAddToCart = (product, event) => {
    event.stopPropagation();
    addToCart(product);
    
    const button = event.currentTarget;
    const originalContent = button.innerHTML;
    button.innerHTML = "‚úì";
    button.classList.add("added-to-cart");
    
    setTimeout(() => {
      button.innerHTML = originalContent;
      button.classList.remove("added-to-cart");
    }, 1000);
  };

  // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ —Å–µ–∫—Ü–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  const scrollSection = (direction) => {
    const container = document.querySelector(".products-container");
    const scrollAmount = container.offsetWidth * 0.8;
    
    if (direction === "left") {
      container.scrollBy({ left: -scrollAmount, behavior: "smooth" });
      if (currentDot > 0) {
        setCurrentDot((prev) => prev - 1);
      }
    } else {
      container.scrollBy({ left: scrollAmount, behavior: "smooth" });
      if (currentDot < 1) {
        setCurrentDot((prev) => prev + 1);
      }
    }
  };

  return (
    <div>
      <div className="waffle ice-cream-catalog">
        <div id="waffle-section" className="catalog-section section-1">
          <div className="section-header">
            <h2>–í–ê–§–õ–ò –ú–û–†–û–ñ–ï–ù–û–ï</h2>
            <p>–í–∞—Ñ–ª–∏ —Ç–∞–∫–æ —Å –º–æ—Ä–æ–∂–µ–Ω–Ω—ã–º –∏–∑–º–µ–Ω—è—Ç –≤–∞—à –¥–µ–Ω—å!</p>
            <span className="arrow right-arrow" onClick={() => scrollSection("right")}>
              ‚Üí
            </span>
          </div>
          
          <div className="products-container">
            {waffleProducts.map((product) => (
              <div
                key={product.id}
                className="product-card"
                onClick={() => handleProductClick(product)}
              >
                {product.isNew && <span className="new-badge">–ù–û–í–ò–ù–ö–ê</span>}
                <div className="wishlist-icon"></div>
                <img
                  src={product.images[0]}
                  alt={product.name}
                  className="product-image"
                />
                <div className="product-info">
                  <h3>{product.name}</h3>
                  <p>{product.description}</p>
                  <div className="product-rating">
                    {[...Array(Math.floor(product.rating))].map((_, i) => (
                      <span key={i}> COPYING</span>
                    ))}
                    {product.rating % 1 !== 0 && <span>‚òÜ</span>} {product.rating}{" "}
                    ({product.reviews})
                  </div>
                  <div className="product-price-cart">
                    <span className="price">‚Çπ {product.price}</span>
                    <button
                      className="add-to-cart-btn"
                      onClick={(e) => handleAddToCart(product, e)}
                    >
                      <i className="cart-icon">üõí</i>
                    </button>
                  </div>
                  <div className="order-buttons">
                    <button
                      className="order-swiggy"
                      onClick={(e) => {
                        e.stopPropagation();
                        window.open("https://www.swiggy.com", "_blank");
                      }}
                    >
                      –ó–ê–ö–ê–ó–ê–¢–¨ –ù–ê SWIGGY
                    </button>
                    <button
                      className="order-zomato"
                      onClick={(e) => {
                        e.stopPropagation();
                        window.open("https://www.zomato.com", "_blank");
                      }}
                    >
                      –ó–ê–ö–ê–ó–ê–¢–¨ –ù–ê ZOMATO
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {selectedProduct && (
          <div className="product-modal-overlay" onClick={closeModal}>
            <div className="product-modal" onClick={(e) => e.stopPropagation()}>
              <button className="close-modal" onClick={closeModal}>
                √ó
              </button>
              <div className="modal-content">
                <div className="modal-image-container">
                  <img
                    src={selectedProduct.images[1]}
                    alt={`${selectedProduct.name} –∑–∞–¥–Ω–∏–π –≤–∏–¥`}
                    className="modal-image"
                  />
                </div>
                <div className="modal-info">
                  <h3>{selectedProduct.name}</h3>
                  <p className="modal-description">{selectedProduct.description}</p>
                  <div className="modal-rating">
                    {[...Array(Math.floor(selectedProduct.rating))].map((_, i) => (
                      <span key={i}>‚òÖ</span>
                    ))}
                    {selectedProduct.rating % 1 !== 0 && <span>‚òÜ</span>}{" "}
                    {selectedProduct.rating}/5 ({selectedProduct.reviews})
                  </div>
                  <div className="modal-price">‚Çπ {selectedProduct.price}</div>
                  <button
                    className="add-to-cart-modal"
                    onClick={() => {
                      addToCart(selectedProduct);
                      closeModal();
                      setTimeout(() => setIsCartOpen(true), 300);
                    }}
                  >
                    –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default WaffleIceCreamCatalog;